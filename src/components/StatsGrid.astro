---
export interface Props {
  stats: Array<{
    number: string;
    label: string;
    icon?: string;
  }>;
  variant?: 'default' | 'compact' | 'featured';
  class?: string;
}

const { 
  stats,
  variant = 'default',
  class: className = ''
} = Astro.props;

const statsClasses = [
  'stats-container',
  `stats-container--${variant}`,
  className
].filter(Boolean).join(' ');
---

<div class={statsClasses}>
  {stats.map((stat, index) => (
    <div 
      class={`stat-item animate-fade-in-scale`} 
      style={`animation-delay: ${index * 0.1}s`}
    >
      {stat.icon && <div class="stat-item__icon">{stat.icon}</div>}
      <span class="stat-item__number">{stat.number}</span>
      <span class="stat-item__label">{stat.label}</span>
      <div class="stat-item__glow"></div>
    </div>
  ))}
</div>

<style>
  .stats-container {
    display: grid;
    gap: var(--spacing-6);
    width: 100%;
  }

  .stats-container--default {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  }

  .stats-container--compact {
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: var(--spacing-4);
  }

  .stats-container--featured {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--spacing-8);
  }

  .stat-item {
    text-align: center;
    padding: var(--spacing-6);
    background: var(--gradient-surface);
    border-radius: var(--radius-2xl);
    box-shadow: var(--shadow-neumorphism);
    border: 1px solid rgba(255, 255, 255, 0.6);
    transition: all var(--transition-normal) var(--ease-out);
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-2);
  }

  .stat-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--gradient-button);
    opacity: 0;
    transition: opacity var(--transition-normal);
  }

  .stat-item:hover {
    transform: translateY(-6px) scale(1.02);
    box-shadow: var(--hover-elevation);
  }

  .stat-item:hover::before {
    opacity: 1;
  }

  .stat-item:hover .stat-item__glow {
    opacity: 1;
  }

  .stat-item__icon {
    font-size: var(--font-size-3xl);
    margin-bottom: var(--spacing-2);
    width: 60px;
    height: 60px;
    background: var(--gradient-button);
    color: var(--text-inverse);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: var(--shadow-neumorphism-small);
    transition: all var(--transition-normal);
  }

  .stat-item:hover .stat-item__icon {
    transform: scale(1.1) translateY(-2px);
    box-shadow: var(--shadow-neumorphism-button), var(--glow-blue);
  }

  .stat-item__number {
    font-size: var(--font-size-4xl);
    font-weight: var(--font-weight-black);
    background: var(--gradient-button);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    display: block;
    line-height: 1;
  }

  .stat-item__label {
    font-size: var(--font-size-sm);
    color: var(--text-muted);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-weight: var(--font-weight-semibold);
  }

  .stat-item__glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 150px;
    height: 150px;
    background: radial-gradient(
      circle,
      rgba(59, 130, 246, 0.1) 0%,
      transparent 70%
    );
    border-radius: 50%;
    opacity: 0;
    transition: opacity var(--transition-slow);
    pointer-events: none;
  }

  /* Variantes */
  .stats-container--compact .stat-item {
    padding: var(--spacing-4);
  }

  .stats-container--compact .stat-item__number {
    font-size: var(--font-size-3xl);
  }

  .stats-container--compact .stat-item__icon {
    width: 50px;
    height: 50px;
    font-size: var(--font-size-2xl);
  }

  .stats-container--featured .stat-item {
    padding: var(--spacing-8);
    border: 2px solid transparent;
    background: var(--gradient-surface);
    background-clip: padding-box;
    position: relative;
  }

  .stats-container--featured .stat-item::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: var(--gradient-hero);
    background-size: 300% 300%;
    border-radius: inherit;
    z-index: -1;
    opacity: 0;
    animation: gradient-shift 3s ease-in-out infinite;
    transition: opacity var(--transition-normal);
  }

  .stats-container--featured .stat-item:hover::after {
    opacity: 0.3;
  }

  .stats-container--featured .stat-item__number {
    font-size: var(--font-size-5xl);
  }

  .stats-container--featured .stat-item__icon {
    width: 80px;
    height: 80px;
    font-size: var(--font-size-4xl);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .stats-container--default {
      grid-template-columns: repeat(2, 1fr);
    }

    .stats-container--featured {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--spacing-6);
    }

    .stat-item {
      padding: var(--spacing-4);
    }

    .stat-item__number {
      font-size: var(--font-size-3xl);
    }

    .stat-item__icon {
      width: 50px;
      height: 50px;
      font-size: var(--font-size-2xl);
    }
  }

  @media (max-width: 480px) {
    .stats-container--default,
    .stats-container--featured {
      grid-template-columns: 1fr;
    }

    .stats-container--compact {
      grid-template-columns: repeat(2, 1fr);
    }

    .stat-item {
      padding: var(--spacing-3);
    }

    .stat-item__number {
      font-size: var(--font-size-2xl);
    }
  }

  /* Accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .stat-item {
      animation: none;
    }
  }

  /* Estados de focus */
  .stat-item:focus-within {
    outline: 2px solid var(--accent-blue);
    outline-offset: 2px;
  }
</style>
